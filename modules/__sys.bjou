# __sys.bjou
# This file was generated by gen_sys.
# system calls

module __sys

import "os.bjou"

extern nolibc_syscall(i64, i32, ...) : i32

\static_if{ os::OS != os::MACOS
    const SYS_NR_MOD := 0x0 }
\static_if{ os::OS == os::MACOS
    const SYS_NR_MOD := 0x2000000 }

type fd_t   = int
type mode_t = u16

const SYS_write := SYS_NR_MOD + 1
const SYS_read := SYS_NR_MOD + 0
const SYS_open := SYS_NR_MOD + 2
const SYS_close := SYS_NR_MOD + 3
const SYS_lseek := SYS_NR_MOD + 8
const SYS_access := SYS_NR_MOD + 21
const SYS_getpid := SYS_NR_MOD + 39
const S_IRWXU := 448
const S_IRUSR := 256
const S_IWUSR := 128
const S_IXUSR := 64
const S_IRWXG := 56
const S_IRGRP := 32
const S_IWGRP := 16
const S_IXGRP := 8
const S_IRWXO := 7
const S_IROTH := 4
const S_IWOTH := 2
const S_IXOTH := 1
const O_RDONLY := 0
const O_WRONLY := 1
const O_RDWR := 2
const O_APPEND := 1024
const O_CREAT := 64
const O_TRUNC := 512
const O_EXCL := 128
const SEEK_SET := 0
const SEEK_CUR := 1
const SEEK_END := 2
const F_OK := 0

proc write(fd : i32, buf : void*, nbyte : u64) : i64
    return nolibc_syscall(SYS_write, 3, fd, buf, nbyte)

proc read(fd : i32, buf : void*, nbyte : u64) : i64
    return nolibc_syscall(SYS_read, 3, fd, buf, nbyte)

proc open(path: char*, oflag : int) : i64
    return nolibc_syscall(SYS_open, 2, path, oflag)

proc open(path: char*, oflag : int, mode : mode_t) : i64
    return nolibc_syscall(SYS_open, 3, path, oflag, mode)

proc close(fd : int) : i64
    return nolibc_syscall(SYS_close, 1, fd)

proc lseek(fd : int, offset : u64, whence : int) : u64
    return nolibc_syscall(SYS_lseek, 3, fd, offset, whence)

proc access(path : char*, mode : int) : i64
    return nolibc_syscall(SYS_access, 2, path, mode)

proc getpid() : i64
    return nolibc_syscall(SYS_getpid, 0)
