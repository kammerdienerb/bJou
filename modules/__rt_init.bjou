# __rt_init.bjou
# Initialize things in the run time of a bJou program
# Automatically called by the implicit main()

module __rt_init

import "__env.bjou"

extern signal(int, <(int)>) : <(int)>
extern sprintf(char*, char*, ...) : int

proc __bjou_sigabrt_handler(sig : int) {
    buff : char[4096]
    
    prgnm := __env::env.args()[0].c_str()
    buff.sprintf("'%s' terminated by signal SIGABRT (abort program)", prgnm)
    \die{ buff }
}

proc __bjou_sigbus_handler(sig : int) {
    buff : char[4096]
    
    prgnm := __env::env.args()[0].c_str()
    buff.sprintf("'%s' terminated by signal SIGBUS (bus error)", prgnm)
    \die{ buff }
}

proc __bjou_sigsegv_handler(sig : int) {
    buff : char[4096]
    
    prgnm := __env::env.args()[0].c_str()
    buff.sprintf("'%s' terminated by signal SIGSEGV (segmentation violation)", prgnm)
    \die{ buff }
}

proc __bjou_rt_init(argc : int, argv : char**) {
    signal(6, __bjou_sigabrt_handler)
    signal(10, __bjou_sigbus_handler)
    signal(11, __bjou_sigsegv_handler)
    __bjou_fill_args(argc, argv)
}
