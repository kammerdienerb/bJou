# [PackageDev] target_format: plist, ext: tmLanguage
name: bJou
scopeName: source.bjou
fileTypes: [bjou]
uuid: f7ecc55f-3a16-4c3c-8d82-c60cffd47693

patterns:
- comment: flow control
  name: keyword.control.bjou
  match: \b(return|if|else|while|do|for|foreach|in|match|with|and|or|\&\&|\|\||break|continue)\b

- comment: types
  match: \b(([ui](1|8|16|32|64))|f(32|64)|void|bool|char|short|int|long|float|double|unsigned|byte|string|file|list|dict)\b
  captures:
    '1': {name: entity.name.type.bjou}

- comment: general keywords
  name: keyword.other.bjou
  match: \b(const|macro|proc|extern|type|from|extends|interface|implements|abstract|alias|this|ref|enum|namespace|maybe|print|fail|new|raw|immut|delete|as|import|module|operator|sizeof|using)\b

- comment: procs and methods
  match: \b([_a-zA-Z][_a-zA-Z0-9]*'*)(<.*>)?\(
  captures:
    '1': {name: entity.name.function}

- comment: val words
  name: constant.numeric.bjou
  match: \b(not|true|false|nothing|some)\b

- comment: identifiers
  match: \b([_a-zA-Z][_a-zA-Z0-9]*'*)\b
  captures:
    '1': {name: entity.name.identifier}

- comment: macros
  match: (\\[_a-zA-Z][_a-zA-Z0-9]*)
  captures:
    '1': {name: entity.name.macro}

- comment: decimal
  name: constant.numeric.bjou
  match: ((?<=[^_a-zA-Z])-?[0-9]+)

- comment: float
  name: constant.numeric.bjou
  match: ((?<=[^_a-zA-Z])-?[0-9].[0-9]+)

- comment: char
  name: constant.numeric.bjou
  match: ('([ \S]|\\.)')

- comment: string
  name: string.double.bjou
  match: (\"(\\.|[^\"])*\")

- comment: single-line comments
  name: comment.bjou
  match: '#.*'

- comment: multi-line comments
  name: comment.bjou
  begin: /\*
  end: \*/
