# demo3.bjou
# Defining Types

type Base {
    c : char
    message : char*
}

type Derived extends Base {
    num : int

    proc create(c : char, message : char*, num : int) : Derived
        return  { Derived: 
                    .c = c.(extern toupper(char) : char)(), 
                    .message = message, 
                    .num = num 
                }

    proc printall(this : Derived*)
        print "{ %, %, % }", this.c, this.message, this.num
}

(proc main() {
    d := Derived.create('b', "derived type", 12345)
    d->printall()
})()
