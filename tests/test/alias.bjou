# alias.bjou

# \run { main() }
main()

type vectorThree$T {
    x : T
    y : T
    z : T

    proc create(x : T, y : T, z : T) : vectorThree$T
        return { vectorThree$T: 
            .x = x,
            .y = y,
            .z = z
        }
}

type point = (float, float)

type vec3i = vectorThree$int
type vec3f = vectorThree$float

proc printvec$T(vec : vectorThree$T ref)
    print "%", vec

proc vectype(v : vec3i ref) print "vector of ints"
proc vectype(v : vec3f ref) print "vector of floats"

type vectypei_t = <(vec3i ref)>
type vectypef_t = <(vec3f ref)>

proc main() {
    p : point = (1.23, 4.56)
    print "(%, %)", p.0, p.1

    vi := vec3i.create(1, 2, 3)
    vf := vec3f.create(5.6, 7.8, 9.0)

    vti : vectypei_t = vectype
    vtf : vectypef_t = vectype

    vi.vti()
    vi.printvec()
    vf.vtf()
    vf.printvec()
}
