# dict.bjou

module dict

import "pointer.bjou"

type _dictnode!(K, V) {
    key   : K
    val   : V
    left  : _dictnode!(K, V)*
    right : _dictnode!(K, V)*

    proc create(key : K, val : V) : _dictnode!(K, V) {
        return { _dictnode!(K, V):
            .key = key,
            .val = val
        }
    }
}

type dict!(K, V) {
    root : _dictnode!(K, V)*
    hascmp : bool
    cmp : <(K, K) : bool>
    
    proc create() : dict!(K, V) {
        return { dict!(K, V):
            .root = (null() as _dictnode!(K, V)*),
            .hascmp = false,
        }
    }
}
