# simpleclang.bjou

import "null.bjou"

abstract type CXIndex           { }
abstract type CXTargetInfo      { }
abstract type CXTranslationUnit { }
abstract type CXClientData      { }

type CXCursor {
    kind  : u32
    xdata : i32
    data  : void*[3]
}

type CXUnsavedFile {
    Filename : char*
    Contents : char*
    Length   : u64 
}

extern clang_createIndex(i32, i32) : CXIndex*
extern clang_parseTranslationUnit(
        CXIndex*,
        char*,
        char**,
        i32,
        CXUnsavedFile*,
        u32,
        u32)
        : CXTranslationUnit*
extern clang_getTranslationUnitCursor(CXTranslationUnit*) : CXCursor

extern clang_visitChildren(
        CXCursor,
        <(  CXCursor,
            CXCursor,
            CXClientData*)
            : u32>,
        CXClientData*)
        : u32

proc my_visitor(parent      : CXCursor,
                cursor      : CXCursor,
                client_data : CXClientData*) : u32 {
    print "AST node"
    return 2                    
}

(proc main() {
    index := clang_createIndex(0, 0)
    unit := clang_parseTranslationUnit(
        index,
        "c.c",
        _nullptr() as char**, 0,
        _nullptr() as CXUnsavedFile*, 0,
        0)
    cursor := clang_getTranslationUnitCursor(unit)
    printf("{ %u, %d, %p }\n", cursor.kind, cursor.xdata, cursor.data)
    clang_visitChildren(cursor, my_visitor, _nullptr() as CXClientData*)
})()
