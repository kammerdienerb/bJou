# api.bjou

import "compiler.bjou"
import "null.bjou"

$ct {
    proc main() {
        nullnode := _nullptr() as ASTNode*
        nullnodes := _nullptr() as ASTNode**
        nullstrings := _nullptr() as char**
       
        # create AST nodes
        void_decl := bjou_createDeclarator(
                        bjou_createIdentifier("void"),
                        nullnode,
                        nullstrings, 0)

        arg_exprs : ASTNode*[1]
        statements : ASTNode*[1]

        arg_exprs[0] = bjou_createStringLiteral("This was created programatically.\n")
        statements[0] = bjou_createCallExpression(
                            bjou_createIdentifier("printf"),
                            bjou_createArgList(
                                arg_exprs, 1))

        p := bjou_createProcedure(
                "programatic",
                 nullnodes, 0,
                 false,
                 void_decl,
                 statements, 1)

        call := bjou_createCallExpression(
                    bjou_createIdentifier("programatic"),
                    bjou_createArgList(
                        nullnodes, 0))

        # run passes 
        gs := bjou_getGlobalScope()
       
        bjou_addSymbols(p, gs)
        bjou_addSymbols(call, gs)

        bjou_analyze(p)
        bjou_analyze(call)

        # add them to the compilation
        bjou_appendNode(p)
        bjou_appendNode(call)
    }
}

$run{ main() }
